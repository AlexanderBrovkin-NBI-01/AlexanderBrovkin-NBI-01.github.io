[{"authors":null,"categories":null,"content":"Я родился в 2003 году и уже добился многого. Я поступил в университет мечты и теперь тут добиваюсь высот. Я хочу побывать во многих странах мира и посетить некоторые интересные места, надеюсь у меня все получится./I was born in 2003 and have already achieved a lot. I entered the dream university and now I am achieving heights here. I want to visit many countries of the world and visit some interesting places, I hope I succeed.\n","date":1651708800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1651708800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Я родился в 2003 году и уже добился многого. Я поступил в университет мечты и теперь тут добиваюсь высот. Я хочу побывать во многих странах мира и посетить некоторые интересные места, надеюсь у меня все получится.","tags":null,"title":"Бровкин Александр","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview I did a lot of OS labs last week and it’s been a productive week\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://example.com/post/getting-started/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"How I Spent the Last Week","tags":["Academic","开源"],"title":"Blog-01","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview About Version Control\nWhat is “version control”, and why should you care? Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later. For the examples in this book, you will use software source code as the files being version controlled, though in reality you can do this with nearly any type of file on a computer.\nIf you are a graphic or web designer and want to keep every version of an image or layout (which you would most certainly want to), a Version Control System (VCS) is a very wise thing to use. It allows you to revert selected files back to a previous state, revert the entire project back to a previous state, compare changes over time, see who last modified something that might be causing a problem, who introduced an issue and when, and more. Using a VCS also generally means that if you screw things up or lose files, you can easily recover. In addition, you get all this for very little overhead.\nLocal Version Control Systems\nMany people’s version-control method of choice is to copy files into another directory (perhaps a time-stamped directory, if they’re clever). This approach is very common because it is so simple, but it is also incredibly error prone. It is easy to forget which directory you’re in and accidentally write to the wrong file or copy over files you don’t mean to.\nTo deal with this issue, programmers long ago developed local VCSs that had a simple database that kept all the changes to files under revision control.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"0ec49d1b3e250a6981cbaab82cff430e","permalink":"https://example.com/post/getting-started-2/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-2/","section":"post","summary":"This chapter will be about getting started with Git. We will begin by explaining some background on version control tools, then move on to how to get Git running on your system and finally how to get it set up to start working with. At the end of this chapter you should understand why Git is around, why you should use it and you should be all set up to do so.","tags":["Academic","开源"],"title":"Blog-02","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview На прошлой неделе я делал лабораторный работы по ОС и Моделированию, но также я погулял с друзьями в центре города.Было очень весело.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"29a1de823e4baf8df7bea6cd75fa1b09","permalink":"https://example.com/post/getting-started-3/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-3/","section":"post","summary":"Прошлая неделя прошла замечательно.","tags":["Academic","开源"],"title":"Blog-03-Прошешдая неделя-2","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview Markdown — это простой язык разметки, используемый для создания форматированного текста (например, HTML) с помощью текстового редактора. Он позволяет добавлять к тексту базовое форматирование, используя символы, известные и доступные на всех клавиатурах. Размер шрифта, цвет и другие расширенные параметры недоступны в Markdown.\nУгловые скобки\nЕсли в тексте файла используются угловые скобки (например, для обозначения заполнителя), их нужно кодировать вручную. В противном случае разметка Markdown считает их HTML-тегами.\nНапример, следует закодировать как \u0026lt;script name\u0026gt; или \u0026lt;script name\u0026gt;.\nУгловые скобки не обязательно должны быть экранированы в тексте, отформатированном как встроенный код, или в блоках кода. Апострофы и кавычки\nЕсли вы копируете текст из Word в редактор Markdown, он может содержать книжные (изогнутые) апострофы или кавычки. Их нужно заменить кодом или обычными апострофами или кавычками. В противном случае после публикации файла может отобразиться нечитаемый текст, например Itâ€™s.\nНиже приведены кодировки для этих знаков пунктуации:\nлевая (открывающая) кавычка: \u0026amp;#8220;; правая (закрывающая) кавычка: \u0026amp;#8221;; правая закрывающая одинарная кавычка или апостроф: \u0026amp;#8217;; левая открывающая одинарная кавычка (используется редко): \u0026amp;#8216;.  Блок цитирования\nБлоки цитирования создаются с помощью символа \u0026gt;: Markdown\n This is a blockquote. It is usually rendered indented and with a different background color.\n Предыдущий пример отображается следующим образом:\nЭто блок цитирования. Обычно он отображается с отступом и имеет другой цвет фона.  Полужирное и курсивное начертания\nЧтобы задать для текста полужирное начертание, заключите его в двойные звездочки: Markdown\nThis text is bold.\nЧтобы задать для текста курсивное начертание, заключите его в одинарные звездочки: Markdown\nThis text is italic.\nЧтобы задать для текста полужирное и курсивное начертание, заключите его в тройные звездочки: Markdown\nThis text is both bold and italic.\nФрагменты кода\nРасширение Docs Markdown поддерживает как встраивание фрагментов кода в предложение, так и их размещение между предложениями в виде отдельных огражденных блоков. Дополнительные сведения см. в разделе Как добавить код в документацию. Столбцы\nРасширение Markdown столбцы дает авторам документации возможность добавлять макеты содержимого на основе столбцов, которые являются более гибкими и эффективными, чем базовые таблицы Markdown, подходящие только для действительно табличных данных. Можно добавить до четырех столбцов и использовать необязательный атрибут span для объединения двух или более столбцов.\nХотя расширение columns все еще работает, мы больше не рекомендуем использовать его для создания пользовательских макетов. Мы обнаружили, что при использовании многих настраиваемых макетов столбцов бывают проблемы с доступностью или наблюдаются нарушения рекомендаций по оформлению документации. Не создавайте пользовательские макеты. Используйте стандартные возможности расширения Docs.\nИспользуйте следующий синтаксис для столбцов: Markdown\n:::row::: :::column span=\u0026#34;\u0026#34;::: Content… :::column-end::: :::column span=\u0026#34;\u0026#34;::: More content… :::column-end::: :::row-end:::\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"c68e23b146520f849a06ddea6015373b","permalink":"https://example.com/post/getting-started-4/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-4/","section":"post","summary":"Markdown — это простой язык разметки, используемый для создания форматированного текста (например, HTML) с помощью текстового редактора. Он позволяет добавлять к тексту базовое форматирование, используя символы, известные и доступные на всех клавиатурах. Размер шрифта, цвет и другие расширенные параметры недоступны в Markdown.","tags":["Academic","开源"],"title":"Blog-04-Язык разметки markdown","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview На прошедшей неделе я гулял со своими друзьями, мы вкусно поели и отлично провели время. Также я побывал в аквапарке.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"29c811bf2c8859f17a5ec81c06159872","permalink":"https://example.com/post/getting-started-5/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-5/","section":"post","summary":"На прошедшей неделе я встретился с друзьями.","tags":["Academic","开源"],"title":"Моя прошедшая неделя-3","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview Составляя отчет по практике, студент оценивает результаты работы и делает выводы о своей квалификации, знаниях и навыках, полученных в вузе. Чтобы работу приняли, она должна быть не только грамотной и содержательной. Оформление отчета по ГОСТу позволит вам получить «отлично» или хотя бы «хорошо».\nОбычно требования к оформлению отчета прописывают в методичках. Если таковых не осталось на кафедре или в библиотеке, обратитесь к нормативным документам.\nОформление отчета по практике по ГОСТу отнимает много времени? Воспользуйтесь чужим опытом – скачайте работы, актуальные на текущий год, и посмотрите, как они оформлены. Главное, чтобы эти примеры сами соответствовали последним требованиям. Структура отчета по практике\nОтчет может содержать до 35-40 страниц. В некоторых случаях допускается увеличивать объем до 45 страниц. При этом на введение отводят две-три страницы. В работе может быть до четырех разделов.\nСогласно ГОСТам, отчет по практике должен иметь следующую структуру: — титульный лист; — план прохождения практики; — отзыв руководителя; — аннотация; — раздел с сокращениями и условными обозначениями; — оглавление и введение; — основная часть практической работы; — заключение; — использованная литература списком; — приложения и дополнительные материалы.\nПриложения включаются в практику по мере необходимости.\nВ отчет по практике всегда входит план и отзыв научного руководителя. Эти два раздела следуют в работе один за другим. После отзыва научного руководителя размещают аннотацию. В ней подчеркивается актуальность работы, размещается ее краткая характеристика. Введение должно содержать данные о практике: время, место, продолжительность практики, а также виды выполненных работ.\nТребования к оформлению работы\nОформление работы по ГОСТ подразумевает не только строгую структуру, но и выбор определенных шрифтов и их размеров, грамотное оформление списка литературы и правильное размещение графических элементов в тексте.\nТекстовую часть практической работы выполняют тремя основными способами:\n— на компьютере согласно ГОСТ 2.004; — на пишущей машинке; — от руки – согласно ГОСТ 2.304 (речь идет об использовании чертежного шрифта).\nЕсли отчет набирают на компьютере и распечатывают на принтере, то работать следует в Word или аналогичном редакторе. Распечатывают отчет на листах А4. Текст набирают шрифтом Times New Roman. Заголовки разделов имеют размер шрифта 16 пунктов, заголовки подразделов — 14 пунктов. Основной текст выполняют обычным шрифтом размером в 14 пунктов. Шрифт в разделах и подразделах полужирный. При оформлении нужно выбрать одинарный межстрочный интервал.\nДополнительную информацию можно узнать в ГОСТ 2.105-79 и ГОСТ 7.32-2001.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"5d5ea839737071a7302f9860fc4acf57","permalink":"https://example.com/post/getting-started-6/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-6/","section":"post","summary":"Составляя отчет по практике, студент оценивает результаты работы и делает выводы о своей квалификации, знаниях и навыках, полученных в вузе. Чтобы работу приняли, она должна быть не только грамотной и содержательной. Оформление отчета по ГОСТу позволит вам получить «отлично» или хотя бы «хорошо».","tags":["Academic","开源"],"title":"Оформление отчета","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview На прошлой неделе я занимался заданиями по операционным системам, а также начал смотреть сериал. Также я пересмотрел сериал очень странные дела.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"24fa07d30374677a5f48ef4372b7bdd2","permalink":"https://example.com/post/getting-started-7/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-7/","section":"post","summary":"Учеба и отдых на прошедшей неделе","tags":["Academic","开源"],"title":"Пост по прошедшей неделе - 4","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview На прошлой неделе я занимался заданиями по технологии программирования , а также отметил день рождения своего лучшего друга.Было очень весело./Last week I did coding technology assignments and also celebrated my best friend’s birthday. It was a lot of fun.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"ecb54129f924499eec7275a7843b6499","permalink":"https://example.com/post/getting-started-9/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-9/","section":"post","summary":"Учеба и день рождения на прошедшей неделе","tags":["Academic","开源"],"title":"Пост по прошедшей неделе - 5.Post 5","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview Язык программирования Java\nJava — это достаточно универсальный язык программирования, который часто используется для веб-разработки и для разработки под Android.\nJava — это объектно-ориентированный язык программирования, разработанный компанией Sun Microsystems (в последующем приобретённой компанией Oracle). Дата официального выпуска — 23 мая 1995 года.\nПрограммы на Java транслируются в байт-код, который затем выполняется виртуальной машиной Java (JVM). JVM — это программа, которая обрабатывает байтовый код и передает инструкции оборудованию как интерпретатор. Достоинством подобной реализации является независимость байт-кода от операционной системы и оборудования, что позволяет выполнять Java-приложения на любом устройстве, для которого существует JVM.\nДругой важной особенностью технологии Java является гибкая система безопасности благодаря тому, что исполнение программы полностью контролируется виртуальной машиной. Любые операции, которые превышают установленные полномочия программы (например, попытка несанкционированного доступа к данным или соединения с другим компьютером) вызывают немедленное прерывание.\nЧасто к недостаткам концепции виртуальной машины относят то, что исполнение байт-кода виртуальной машиной может снижать производительность программ и алгоритмов, реализованных на языке Java. Программы, написанные на Java, имеют репутацию более медленных и занимающих больше оперативной памяти, чем написанные на языке Си. Однако, если сравнивать Java с интерпретируемыми языками, которые наиболее часто используются в веб-разработке, то производительность Java обычно заметно выше. Разработка на Java\nВ веб-разработке Java занимает Enterprise-сегмент: обычно на Java реализуют веб-сервисы и приложения Заказчики из очень крупного бизнеса, часто по историческим причинам или из-за наличия квалифицированной внутренней команды.\nСкорость и удобство разработки веб-приложений на Java оставляет желать лучшего (равно как и стоимость такой разработки), но с точки зрения надёжности и производительности итогового результата — Java не отстаёт от других компилируемых языков и опережает интерпретируемые.\nВ разработке под Android сейчас Java вытесняется языком Kotlin, который также работает поверх JVM. Цель создания языка Kotlin — большая лаконичность и типобезопасность по сравнению с Java, и большая простота использования, по сравнению с Scala.\n|\nJava programming language\nJava is a fairly versatile programming language that is often used for web development and Android development.\nJava is an object-oriented programming language developed by Sun Microsystems (later acquired by Oracle). The official release date was May 23, 1995.\nJava programs are translated into bytecode, which is then executed by the Java Virtual Machine (JVM). A JVM is a program that processes byte code and passes instructions to the hardware as an interpreter. The advantage of this implementation is that the bytecode is independent of the operating system and hardware, allowing Java applications to run on any device for which a JVM exists.\nAnother important feature of Java technology is a flexible security system due to the fact that program execution is fully controlled by the virtual machine. Any operation that exceeds the program’s established authority (e.g. attempting unauthorized access to data or connecting to another computer) causes an immediate interruption.\nA frequent disadvantage of the virtual machine concept is that the execution of byte code by a virtual machine can degrade the performance of programs and algorithms implemented in Java. Programs written in Java have a reputation for being slower and taking up more RAM than those written in C. However, if you compare Java to the interpreted languages most commonly used in web development, Java’s performance is usually noticeably better. Java development\nIn web development, Java occupies the Enterprise segment: usually web services and applications are implemented in Java by Customers from very large businesses, often for historical reasons or because of the availability of a qualified in-house team.\nThe speed and convenience of developing web applications in Java leaves much to be desired (as well as the cost of such development), but in terms of reliability and performance of the final result - Java does not lag behind other compiled languages and is ahead of interpreted languages.\nIn Android development, Java is now being superseded by Kotlin, which also runs on top of the JVM. The purpose of Kotlin is to be more concise and type-safe than Java, and easier to use than Scala.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"fcaf27c6219c7d7a9c500cccc5d027da","permalink":"https://example.com/post/getting-started-10/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-10/","section":"post","summary":"ava — это достаточно универсальный язык программирования, который часто используется для веб-разработки и для разработки под Android./Java is a fairly versatile programming language that is often used for web development and Android development.","tags":["Academic","开源"],"title":"Язык программирования Java/Java programming language","type":"post"},{"authors":["Бровкин Александр","吳恩達"],"categories":["Demo","教程"],"content":"Overview Bash\nСценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится.\nТакже стоит обратить внимание на zsh, который в настоящее время является оболочкой по умолчанию в macOS.\nОбласти применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.\nCOBOL\nОдин из старейших языков, используемых до сих пор, был создан Грейс Хоппер в конце 1950-х годов и предназначался для стандартизации разработки крупномасштабных бизнес-приложений на компьютерах. Блестящая концепция, которая до сих пор применяется в кроссплатформенных SDK. Через системы COBOL проходят невероятные 95% транзакций ATM, причем многие из этих устройств работают круглосуточно 365 дней в году. Такие поставщики устройств, как IBM, разрабатывают более мощные машины, предназначенные для COBOL, но продолжают обслуживать и обновлять существующие системы из-за затрат и рисков, связанных с их заменой. В ближайшее время COBOL никуда не уйдет. Это хороший выбор для тех, кто хочет работать с клиентами из финансовой сферы.\nОбласти применения: банковское дело / финансы, международные корпорации, правительства.\nC/C++\nЭти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\nОбласть применения: разработка ОС / SDK, встроенные устройства, игровые движки, наука.\nDart\nСовременный язык, разработанный в Google для создания мобильных, десктопных, веб-и серверных приложений. Его создатель Ларс Бак также придумал JavaSript Engine V8. Dart напоминает другие современные языки объектно-ориентированного программирования — C #, TypeScript и Java — и предоставляет обширный набор функций, подходящих для определения сложных взаимодействий, асинхронных операций, анимации и других задач.\nОбласти применения: кроссплатформенные приложения, облачные сервисы / корпоративные системы, игры, графика.\nFortran\nFortran, разработанный в IBM в 1950-х годах Джоном Бакусом, — это язык общего назначения, который был создан для проведения научных и инженерных работ. Он до сих пор широко используется в этих целях, в том числе для контрольного тестирования самых быстрых суперкомпьютеров в мире. Он также применялся в космических и физических исследованиях и моделировании погоды.\nОбласти применения: аэрокосмическая/оборонная промышленность, научные вычисления, численный анализ.\n","date":1651708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1651708800,"objectID":"2f7fa63a31bed63f11d53522dfc9aac4","permalink":"https://example.com/post/getting-started-8/","publishdate":"2022-05-05T00:00:00Z","relpermalink":"/post/getting-started-8/","section":"post","summary":"Сегодня в мире существуют сотни языков программирования — как среди них выбрать наиболее подходящий для изучения? Публикуем список из 20 наиболее популярных вариантов. Перечень составлен на основе индексов TIOBE, Google Trends и StackOverflow Trends, языки расположены в алфавитном порядке.","tags":["Academic","开源"],"title":"Языки научного программирования.","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"C++ является расширением языка C и находит свое применение в приложениях, которым требуется высокая скорость и точность, например, в операционных системах, играх, графическом интерфейсе пользователя (GUI) и встроенных системах.\nСамая популярная IDE для C++, Visual Studio используется практических во всех проектах. Вы также можете писать свои программы и в текстовом редакторе, например в блокноте, и компилировать проект с помощью компилятора GCC.\nНекоторые характерные особенности C++:\nОбъектно-ориентированный Богатый набор библиотек Эффективное управление памятью Мощный и быстрый   Система входа и регистрации  Это один из самых простых проектов, с которого можно начать изучение файловых систем на C++. Проект включает в себя процесс регистрации пользователя путем запроса имени пользователя и пароля. После успешной регистрации создается пользовательский файл с учетными данными.\nЕсли пользователя не существует, при входе в систему будет показана ошибка. Вы также узнаете, как использовать Visual Studio для создания простого проекта.\nСистема аренды автомобилей  Это популярный проект, который очень полезен для изучения событий клавиатуры, функций даты и времени и реализации системы входа на C++. В программе есть отдельные меню для администратора и других пользователей.\nСуществуют также методы расчета стоимости проезда на основе времени и расстояния, включая отображение сведений об автомобиле, доступности и т.д.\nВы можете попробовать другие проекты, такие как управление музыкальным магазином, бронирование автобусов или система бронирования железнодорожных билетов, по тем же принципам, что и выше.\nСистема инвентаризации книжного магазина  Это простой проект, в котором система поддерживает хранение книг в книжном магазине. Если клиент покупает книгу, количество книг уменьшится; если добавляется книга, то же самое обновляется. Обратите внимание на использование указателей.\nВы можете изменить код, чтобы добавить идентификатор книги и выполнить поиск на основе идентификатора книги или выполнить поиск с использованием только одного параметра, дающего несколько результатов, и так далее.\nСистема управления отчетами студентов  Благодаря этому проекту мы можем многое узнать о потоках ввода / вывода и системе управления файлами C++. Программа собирает данные об учениках, такие как имя, номер списка, оценки по каждому предмету, и вычисляет их оценку. Это простое консольное приложение.\nОбратите внимание, что в этом проекте мы фокусируемся только на правильных входных данных, и вы можете улучшить его для обработки неправильных входных данных.\nВалидатор кредитных карт  Это простой проект, который использует алгоритм Луна (Luhn algorithm) для проверки кредитной карты пользователя. Программа работает со всеми популярными картами, такими как Visa, Amex, MasterCard и т.д.\nАлгоритм Луна делает основные проверки; например, карта Visa должна начинаться с 4, а затем переходить к сложным вычислениям с помощью цифр. Это хорошая программа для изучения, потому что большинство транзакций электронной коммерции требуют проверки кредитной карты.\nЗаключение В этой статье мы обсудили некоторые важные проекты начального и среднего уровня. Если вы правильно следовали коду, вы должны получить точные результаты.\nХотя Visual Studio предлагает множество функций, для ее загрузки требуется время.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"C++ - это язык программирования, основанный на ООП, очень подходящий для создания высокопроизводительных приложений.","tags":["Deep Learning"],"title":"Проект по С++","type":"project"},{"authors":["Бровкин Александр","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://example.com/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]